
#include <iostream>
#include "sudoku_puzzle.h"



using namespace std;


int puzzle1[9][9] = {
  {9, 0, 8, 0, 3, 0, 0, 0, 0}, // Row1
  {0, 0, 0, 0, 0, 0, 0, 5, 9}, // Row2
  {0, 0, 0, 4, 0, 0, 0, 0, 8}, // Row3
  {0, 5, 6, 0, 0, 0, 0, 0, 0}, // Row4
  {8, 0, 9, 5, 0, 0, 7, 0, 0}, // Row5
  {0, 0, 0, 6, 8, 0, 1, 0, 0}, // Row6
  {0, 1, 0, 0, 4, 0, 8, 0, 0}, // Row7
  {0, 0, 0, 1, 0, 0, 0, 7, 0}, // Row8
  {4, 0, 0, 8, 0, 0, 0, 0, 0}, // Row9
};


int puzzle2[9][9] = {
  {0, 0, 7, 0, 2, 6, 5, 0, 0},  // Row1
  {0, 0, 0, 8, 0, 0, 0, 0, 0}, // Row2
  {0, 0, 0, 0, 9, 7, 0, 0, 6}, // Row3
  {0, 0, 0, 0, 0, 0, 0, 4, 0}, // Row4
  {9, 4, 5, 0, 0, 0, 0, 8, 7}, // Row5
  {0, 7, 8, 0, 0, 0, 6, 0, 0}, // Row6
  {0, 1, 0, 0, 4, 0, 0, 9, 0}, // Row7
  {0, 0, 0, 0, 0, 5, 0, 0, 0}, // Row8
  {0, 0, 6, 7, 8, 0, 1, 0, 4}, // Row9
};

int puzzle3[9][9] = {
  {0, 0, 3, 9, 0, 6, 7, 0, 1},  // Row1
  {1, 6, 0, 5, 0, 0, 0, 0, 0}, // Row2
  {0, 5, 0, 1, 0, 0, 0, 9, 0}, // Row3
  {0, 4, 0, 3, 0, 1, 0, 0, 6}, // Row4
  {2, 0, 0, 0, 0, 9, 0, 3, 0}, // Row5
  {0, 0, 0, 0, 0, 7, 0, 0, 5}, // Row6
  {0, 8, 7, 0, 0, 0, 0, 0, 4}, // Row7
  {0, 0, 2, 0, 0, 0, 3, 6, 0}, // Row8
  {5, 0, 6, 0, 0, 0, 8, 0, 9}, // Row9
};

int puzzle4[9][9] = {
  {3, 7, 0, 0, 0, 4, 0, 9, 0},  // Row1
  {0, 0, 1, 0, 0, 0, 0, 0, 0}, // Row2
  {0, 0, 0, 0, 1, 7, 0, 0, 0}, // Row3
  {0, 0, 0, 0, 6, 0, 0, 0, 0}, // Row4
  {9, 6, 0, 3, 0, 0, 0, 5, 7}, // Row5
  {0, 8, 0, 0, 0, 0, 0, 0, 3}, // Row6
  {5, 0, 0, 0, 0, 0, 4, 2, 9}, // Row7
  {0, 3, 0, 0, 0, 8, 0, 6, 0}, // Row8
  {2, 0, 0, 0, 0, 0, 0, 0, 0}, // Row9
};

int puzzle5[9][9] = {
  {0, 4, 0, 0, 0, 6, 0, 3, 0},  // Row1
  {7, 0, 0, 0, 4, 0, 0, 0, 1}, // Row2
  {0, 0, 0, 8, 0, 0, 9, 0, 0}, // Row3
  {0, 0, 1, 0, 0, 0, 0, 0, 8}, // Row4
  {0, 2, 0, 0, 3, 0, 0, 6, 0}, // Row5
  {3, 0, 0, 0, 0, 0, 1, 0, 0}, // Row6
  {0, 0, 7, 0, 0, 4, 0, 0, 0}, // Row7
  {1, 0, 0, 0, 8, 0, 0, 0, 7}, // Row8
  {0, 6, 0, 3, 0, 0, 0, 2, 0}, // Row9
};

int puzzle6[9][9] = {
{ 0,0,4,0,0,0,7,0,3 },
{ 8,0,0,9,0,2,0,0,0 },
{ 0,3,0,0,0,0,0,0,0 },
{ 0,8,9,1,0,0,0,0,0 },
{ 5,0,0,0,0,0,0,0,8 },
{ 0,0,0,0,0,9,2,6,0 },
{ 0,0,0,0,0,0,0,2,0 },
{ 0,0,0,8,0,4,0,0,5 },
{ 6,0,5,0,0,0,1,0,0 },
};

int main()
{
  static Sudoku puzzle;
  int (*puzz_ptr)[9][9];

  puzz_ptr = &puzzle1;

  cout << "Iniatilizong.." << endl;
  puzzle.init(*puzz_ptr);

  puzzle.print();

  int test;
  cin>>test;

  result res = puzzle.solve();

  bool solved = false;
  if (res==result::ERROR) cout << " Failed !!!\n" << endl;
  if (res==result::STUCK) cout << " STUCK !!!\n" << endl;
  if (res==result::SUCESS) { solved=true; cout << " Solved It !!!\n" << endl;}
  cout << " Original !!" << endl;
  for(int row=0; row<9;++row) {
    for (int col=0; col<9; ++col) {
      cout<<(*puzz_ptr)[row][col] << ", ";
    }
    cout << endl;
  }

  cout << endl << " My Soln !!" << endl;
  puzzle.print();

  if (!solved)
  {
    cout << "--------------------------------------" << endl;
    puzzle.print2();
  }

  return 1;
}